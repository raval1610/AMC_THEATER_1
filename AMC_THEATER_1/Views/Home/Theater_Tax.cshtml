@model AMC_THEATER_1.Models.TaxPaymentViewModel
@{
    Layout = "~/Views/Shared/_HomeSideBar.cshtml";

    ViewBag.Title = "Theater Tax Payment";
    ViewBag.ShowBasicNavbar = false;
    ViewBag.ShowNavbar = true;
    ViewBag.ShowSideBar = true;
    ViewBag.Login = false;
    ViewBag.ModuleTax = true;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Theater Tax Payment</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .form-control, .form-select {
            border-radius: 0.25rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .form-label {
            margin-bottom: 0.5rem;
        }

        .container {
            max-width: 90%;
            padding: 0 15px;
            margin-left: 185px;
            transition: margin-left 0.3s;
            padding: 15px;
        }

        .card {
            padding: 20px;
        }

        .btn-payment {
            background-color: #28a745;
            color: white;
        }
    </style>
</head>
<body>
    <div class="col-xs-12 mt-3 ms-3">
        <div class="col-md-12 mt-3 ms-4">
            <div class="container ms-5">
                <div class="card shadow-sm ms-2">
                    <div class="card-header bg-light text-dark fw-bold text-center">
                        <h4 class="mb-0 fs-2">Make Payment</h4>
                    </div>

                    <!-- Form to fetch theater details -->
                    <form action="@Url.Action("Theater_Tax", "Home")" method="post">
                        <div class="mb-4 ms-5">
                            <div class="d-flex align-items-center justify-content-between">
                                <div class="d-flex mt-4 align-items-center">
                                    <input type="text" id="theater_id" name="theater_id"
                                           class="form-control me-2 w-100 text-center"
                                           placeholder="Enter Theater ID"
                                           value="@Request.Form["theater_id"]" required> <!-- ✅ Retains input value -->

                                    <button type="submit" class="btn btn-secondary">
                                        <i class="fas fa-search"></i>
                                    </button>
                                </div>
                                <div class="text-end">
                                    <a href="javascript:void(0);" id="forgotIdLink" class="btn pe-3 ps-3 mt-3 w-2me-5 btn-secondary" onclick="handleForgotIdClick()">Search ID</a>
                                </div>
                            </div>
                        </div>
                    </form>
                <h4>Hiii</h4>
                    <div class="mb-4">
                        <h4 class="fw-bold text-center bg-light mt-3 p-3">Basic Information</h4>
                    </div>

                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger">@TempData["Error"]</div>
                    }

                    @if (Model != null)
                    {
                        <div class="owner-details ms-5" style="display: block;">
                            <div class="row g-3 align-items-center">
                                <div class="col-md-4">
                                    <label for="owner_name" class="form-label fw-bold">Owner Name</label>
                                    <input type="text" id="owner_name" name="owner_name" class="form-control w-100" value="@Model.OwnerName" readonly required>
                                </div>
                                <div class="col-md-4">
                                    <label for="mobile_no" class="form-label fw-bold">Mobile No</label>
                                    <input type="text" id="mobile_no" name="mobile_no" class="form-control w-100" value="@Model.MobileNo" readonly required>
                                </div>
                                <div class="col-md-4">
                                    <label for="address" class="form-label fw-bold">Address</label>
                                    <textarea id="address" name="address" class="form-control w-100" rows="1" readonly required>@Model.Address</textarea>
                                </div>

                                <div class="col-md-4">
                                    <label for="email" class="form-label fw-bold">Email</label>
                                    <input type="email" id="email" name="email" class="form-control" value="@Model.Email" readonly required>
                                </div>
                                <form action="@Url.Action("ProcessTaxPayment", "Home")" method="post" enctype="multipart/form-data">
                                    <input type="hidden" name="TheaterId" value="@Model.TheaterId" />
                                    <div class="col-md-4">
                                        <label for="month" class="form-label fw-bold">Month</label>
                                        <select id="month" name="month" class="form-select" required>
                                            <option value="">Select Month</option>
                                            @foreach (var month in new[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" })
                                            {
                                                <option value="@month" @(month == Model.Month ? "selected" : "")>@month</option>
                                            }
                                        </select>
                                    </div>

                                    <div class="col-md-4">
                                        <label for="year" class="form-label fw-bold">Year</label>
                                        <select id="year" name="year" class="form-select" required>
                                            <option value="">Select Year</option>
                                            @for (int year = DateTime.Now.Year; year <= DateTime.Now.Year + 3; year++)
                                            {
                                                <option value="@year" @(year == Model.Year ? "selected" : "")>@year</option>
                                            }
                                        </select>
                                    </div>
                            </div>
                        </div>


                        <table id="screenCapacityTable" class="table table-bordered text-center mt-3">
                            <thead class="table-light">
                                <tr>
                                    <th>Screen No</th>
                                    <th>Rate</th>
                                    <th>Screen Type</th>
                                    <th>Total Shows</th>
                                    <th>Canceled Shows</th>
                                    <th>Actual Shows</th>
                                    <th>Amount</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.Screens.Count; i++)
                                {
                                    <tr>
                                        <td>@Model.Screens[i].SEQUENTIAL_SCREEN_NO</td>

                                        <!-- Hidden Field to Ensure ScreenId is Passed -->
                                        <input type="hidden" name="Screens[@i].ScreenId" value="@Model.Screens[i].ScreenId" />

                                        <td>
                                            <input type="text" class="form-control screenPrice"
                                                   name="Screens[@i].ScreenPrice"
                                                   value="@Model.Screens[i].ScreenPrice" readonly />
                                        </td>
                                        <td>@Model.Screens[i].ScreenType</td>
                                       

                                        <td>
                                            <input type="number" class="form-control totalShow"
                                                   name="Screens[@i].TotalShow"
                                                   data-index="@i"
                                                   oninput="calculateActualShow(@i)" required />
                                        </td>
                                        <td>
                                            <input type="number" class="form-control cancelShow"
                                                   name="Screens[@i].CancelShow"
                                                   data-index="@i"
                                                   oninput="calculateActualShow(@i)" required />
                                        </td>
                                        <td>
                                            <input type="number" class="form-control actualShow"
                                                   name="Screens[@i].ActualShow"
                                                   id="actualShow_@i"
                                                   value="0" readonly />
                                        </td>
                                        <td>
                                            <input type="text" class="form-control amount"
                                                   name="Screens[@i].AmtPerScreen"
                                                   id="amtPerScreen_@i"
                                                   value="0" readonly />
                                        </td>
                                    </tr>

                                }

                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="5" class="text-danger">Calculate by Actual Shows × Rate = Amount </td>
                                    <td colspan="1" class="text-end fw-bold">Total Amount:</td>
                                    <td id="totalAmount" class="fw-bold text-end">₹0</td>
                                </tr>
                            </tfoot>
                        </table>
                        <div class="mb-3">
                            <label for="file" class="form-label fw-bold">Upload Show Statement</label>
                            <input type="file" id="file" name="DocumentPath" class="form-control" accept=".jpg,.jpeg,.png,.pdf" required>
                        </div>

                        <div class="col-12 text-center">
                            <button type="submit" class="btn btn-success m-3 w-25">Submit Payment</button>
                        </div>

                    }
                    <script>
                        function calculateActualShow(index) {
                            let totalShow = parseInt(document.querySelector(`[name='Screens[${index}].TotalShow']`).value) || 0;
                            let cancelShow = parseInt(document.querySelector(`[name='Screens[${index}].CancelShow']`).value) || 0;
                            let actualShowInput = document.getElementById(`actualShow_${index}`);
                            let amountInput = document.getElementById(`amtPerScreen_${index}`);

                            // Locate the correct row
                            let row = document.querySelector(`[name='Screens[${index}].TotalShow']`).closest("tr");

                            // Fetch the ScreenType
                            let screenType = row ? row.cells[2].textContent.trim() : ""; // Fetching 3rd <td> (index 2)

                            console.log(`Index: ${index}, Screen Type: ${screenType}`); // Debugging

                            let rate = parseFloat(document.querySelector(`[name='Screens[${index}].ScreenPrice']`).value) || 0;

                            // Calculate Actual Shows
                            let actualShow = Math.max(totalShow - cancelShow, 0);
                            actualShowInput.value = actualShow;

                            // Determine screen type multiplier
                            let multiplier = screenType.toLowerCase() === "theater" ? 75 : 25;

                            // Calculate Amount per Screen
                            let amount = actualShow * multiplier;
                            amountInput.value = amount;

                            // Recalculate total amount
                            calculateTotalAmount();
                        }

                        function calculateTotalAmount() {
                            let totalAmount = 0;
                            document.querySelectorAll(".amount").forEach(input => {
                                totalAmount += parseFloat(input.value) || 0;
                            });
                            document.getElementById("totalAmount").innerText = `₹${totalAmount.toFixed(2)}`;
                        }

                        document.addEventListener("DOMContentLoaded", function () {
                            document.querySelectorAll(".totalShow, .cancelShow").forEach(input => {
                                input.addEventListener("input", function () {
                                    let index = this.getAttribute("data-index");
                                    calculateActualShow(index);
                                });
                            });
                        });
                    </script>





                </div>
                </div>


            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                function updateAmounts(index) {
                    var totalShows = document.querySelector(`[name="Screens[${index}].TotalShow"]`).value || 0;
                    var cancelShows = document.querySelector(`[name="Screens[${index}].CancelShow"]`).value || 0;
                    var screenPrice = document.querySelector(`[name="Screens[${index}].ScreenPrice"]`).value || 0;

                    totalShows = parseInt(totalShows);
                    cancelShows = parseInt(cancelShows);
                    screenPrice = parseFloat(screenPrice);

                    var actualShows = Math.max(totalShows - cancelShows, 0);
                    var amount = actualShows * screenPrice;

                    document.querySelector(`[name="Screens[${index}].ActualShow"]`).value = actualShows;
                    document.querySelector(`[name="Screens[${index}].AmtPerScreen"]`).value = amount.toFixed(2);
                }

                document.querySelectorAll(".totalShow, .cancelShow").forEach(input => {
                    input.addEventListener("input", function () {
                        var index = this.getAttribute("data-index");
                        updateAmounts(index);
                    });
                });
            });
        </script>
      
</body>
</html>
