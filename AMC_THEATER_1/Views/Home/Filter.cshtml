@{
    ViewBag.Title = "Filter";
}

<h2>Filter</h2>

<form id="filterForm" class="p-3 border border-dark bg-light">
    <div class="row g-3">
        <!-- Theater ID Column -->
        <div class="col-md-3 d-inline-block">
            <label for="theaterId" class="fw-bold text-dark" style="font-size: 14px;">Theater ID:</label>
            <input type="text" id="theaterId" name="theaterId" class="form-control form-control-sm" />
        </div>

        <!-- Start Date Column -->
        <div class="col-md-3 d-inline-block">
            <label for="fromDate" class="fw-bold text-dark" style="font-size: 14px;">From Date:</label>
            <input type="date" id="fromDate" name="fromDate" class="form-control form-control-sm" />
        </div>

        <!-- End Date Column -->
        <div class="col-md-3 d-inline-block">
            <label for="toDate" class="fw-bold text-dark" style="font-size: 14px;">To Date:</label>
            <input type="date" id="toDate" name="toDate" class="form-control form-control-sm" />
        </div>

        <!-- Status Column -->
        <div class="col-md-3 d-inline-block">
            <label for="statusFilter" class="fw-bold text-dark" style="font-size: 14px;">Status:</label>
            <select id="statusFilter" name="statusFilter" class="form-control form-control-sm">
                <option value="">All</option>
                <option value="Pending">Pending</option>
                <option value="Complete">Completed</option>
            </select>
        </div>
    </div>


    <!-- Submit Button -->
    <div class="d-flex gap-2 mt-3">
        <button type="button" id="submitBtn" class="btn btn-primary btn-sm" data-bs-toggle="tooltip" data-bs-placement="top" title="Apply Filters">
            <i class="bi bi-funnel"></i> Submit
        </button>

        <!-- Reset Button -->
        <button type="button" id="resetButton" class="btn btn-secondary btn-sm" data-bs-toggle="tooltip" data-bs-placement="top" title="Reset Filters" onclick="resetForm()">
            <i class="fa fa-refresh" aria-hidden="true"></i> Reset
        </button>
    </div>
</form>

<!-- Table to display filtered data -->
<table class="table table-light table-bordered mt-4" id="dataGrid">
    <thead class="table-dark">
        <tr>
            <th>Theater ID</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>
        <!-- Filtered data will be shown here -->
    </tbody>
</table>

<script>
    // Sample data (the list you want to filter)
    const theaterData = [
        { TheaterId: "T001", StartDate: new Date("01-03-2023"), EndDate: new Date("02-04-2023"), Status: "Pending" },
        { TheaterId: "T002", StartDate: new Date("03-02-2023"), EndDate: new Date("03-04-2023"), Status: "Pending" },
        { TheaterId: "T003", StartDate: new Date("02-04-2023"), EndDate: new Date("04-04-2023"), Status: "Complete" },
        { TheaterId: "T002", StartDate: new Date("05-04-2023"), EndDate: new Date("05-04-2023"), Status: "Complete" },
        { TheaterId: "T004", StartDate: new Date("01-05-2023"), EndDate: new Date("01-04-2023"), Status: "Pending" }
    ];

    // Function to filter data based on form input
    function filterData() {
        const theaterId = document.getElementById("theaterId").value.toLowerCase();
        const fromDate = document.getElementById("fromDate").value ? new Date(document.getElementById("fromDate").value) : null;
        const toDate = document.getElementById("toDate").value ? new Date(document.getElementById("toDate").value) : null;
        const statusFilter = document.getElementById("statusFilter").value;

        // Filter the data based on the input
        const filteredData = theaterData.filter(item => {
            let match = true;

            if (theaterId && !item.TheaterId.toLowerCase().includes(theaterId)) {
                match = false;
            }

            if (fromDate && item.StartDate < fromDate) {
                match = false;
            }

            if (toDate && item.EndDate > toDate) {
                match = false;
            }

            if (statusFilter && item.Status !== statusFilter) {
                match = false;
            }

            return match;
        });

        // Display the filtered data in the table
        displayData(filteredData);
    }

    // Function to display filtered data in the table
    function displayData(data) {
        const tableBody = document.getElementById("dataGrid").getElementsByTagName("tbody")[0];
        tableBody.innerHTML = ""; // Clear existing rows

        data.forEach(item => {
            const row = tableBody.insertRow();
            row.insertCell(0).innerText = item.TheaterId;
            row.insertCell(1).innerText = item.StartDate.toISOString().split('T')[0]; // Format as YYYY-MM-DD
            row.insertCell(2).innerText = item.EndDate.toISOString().split('T')[0];
            row.insertCell(3).innerText = item.Status;
        });
    }

    // Event listener for the submit button
    document.getElementById("submitBtn").addEventListener("click", function (event) {
        event.preventDefault(); // Prevent form submission
        filterData(); // Call filterData function on submit
    });

    // Function to reset the form fields
    function resetForm() {
        document.getElementById("filterForm").reset();
        displayData(theaterData); // Display all data after reset
    }

    // Display all data initially
    displayData(theaterData);
</script>
