
@model IEnumerable<AMC_THEATER_1.Models.TheaterViewModel>

@{
   
    int count = 1; // Counter for numbering
    var currentAction = ViewBag.CurrentAction as string;
    var isActionRequests = currentAction == "ActionRequests";

}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ahmedabad Theater List</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .container {
            margin-left: 176px;
            transition: margin-left 0.3s;
            padding: 15px;
        }

        .text-muted {
            color: gray !important;
        }

        .filter-container {
            display: none;
        }
        @*colum position stick css *@

    .table-responsive {
        position: relative;
        overflow-x: auto; /* Ensures horizontal scroll */
    }

    /* Sticky Left Column (Appl No.) */
    .sticky-column-left {
        position: sticky;
        left: 0;
        background-color: white !important; /* Solid white background */
        z-index: 11; /* Make sure it stays above the content */
        box-shadow: 2px 0px 5px rgba(0, 0, 0, 0.1);
    }

    /* Sticky Right Column (Actions) */
    .sticky-column-right {
        position: sticky;
        right: 0;
        background-color: white !important; /* Ensures solid background */
        z-index: 9; /* Ensure it stays below the header */
        box-shadow: -2px 0px 5px rgba(0, 0, 0, 0.1);
    }

    /* Ensuring the header sticks */
        thead .sticky-column-left,
        thead .sticky-column-right {
            background-color: #212529 !important; /* Dark background for header */
            color: white;
            z-index: 15;
        }

    /* Sticky Header */
    .sticky-header {
        position: sticky;
        top: 0; /* Sticks the header to the top when you scroll */
        z-index: 12; /* Ensures the header stays above everything else */
        background-color: #343a40; /* Dark background */
        color: white; /* White text for contrast */
    }

    /* Styling the table headers */
    thead th {
        position: sticky;
        top: 0;
        background-color: #343a40;
        color: white;
        z-index: 11; /* Higher than other elements to stay on top */
    }

    /* Ensure that the background remains solid for each row */
    tbody tr td {
        background-color: white;
    }

    /* Adding a shadow effect to sticky columns */
    table td.sticky-column-left {
        box-shadow: 2px 0px 5px rgba(0, 0, 0, 0.1);
    }

    table td.sticky-column-right {
        box-shadow: -2px 0px 5px rgba(0, 0, 0, 0.1);
    }



    </style>
</head>
<body class="ms-5 container">

    @if (ViewBag.Message != null)
    {
        <div class="alert alert-warning">@ViewBag.Message</div>
    }
    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive" style="max-height: 500px; overflow: auto;">
                <table class="table table-bordered text-left mt-1 table-striped">
                    <thead class="bg-dark text-white sticky-header">
                        <tr>
                            <th class="fw-bold sticky-column-left">Appli No.</th>
                            <th class="fw-bold">Theater ID</th>
                            <th class="fw-bold">Theater Name</th>
                            <th class="fw-bold">Zone  Ward</th>
                            <th class="fw-bold">Owner Name</th>
                            <th class="fw-bold">Address</th>
                            <th class="fw-bold">Theater Screens</th>
                            <th class="fw-bold">Video  Screens</th>
                            <th class="fw-bold">Total Screens</th>
                            <th class="fw-bold"> Commencement Date</th>
                            <th class="fw-bold">Status</th>
                            <th class="fw-bold">Reject Reason</th>
                            <th class="fw-bold" style="white-space: nowrap;">Status Date</th>
                            <th class="fw-bold sticky-column-right">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var theater in Model)
                            {
                                <tr>
                                    <td class="sticky-column-left">@theater.T_ID</td>
                                    <td class="text-center" style="white-space: nowrap; color: @(theater.STATUS.Trim().ToLower() == "approved" ? "green" : "red"); ">
                                        @(theater.STATUS.Trim().ToLower() == "approved" ? theater.REG_ID.ToString() : "Not Generated")
                                    </td>

                                    <td>@theater.T_NAME</td>
                                    <td>@theater.T_ZONE  @theater.T_WARD</td>
                                    <td>@theater.T_OWNER_NAME</td>
                                    <td>@theater.T_ADDRESS</td>
                                    <td class="text-center">@theater.THEATER_SCREEN_COUNT</td>
                                    <td class="text-center">@theater.VIDEO_THEATER_SCREEN_COUNT</td>
                                    <td class="text-center">@(@theater.THEATER_SCREEN_COUNT + @theater.VIDEO_THEATER_SCREEN_COUNT)</td>
                                    <td style="white-space: nowrap;">@theater.T_COMMENCEMENT_DATE.ToString("dd-MMM-yyyy")</td>
                                    <td class="@(theater.STATUS == "Approved" ? "text-success" : (theater.STATUS == "Rejected" ? "text-danger" : "text-warning"))">
                                        @(theater.STATUS == "Approved" ? "Approved" : theater.STATUS == "Rejected" ? "Rejected" : "Pending")
                                    </td>
                                    <td>@(theater.STATUS == "Rejected" ? theater.REJECTREASON : "-")</td>
                                    <td style="white-space: nowrap;">
                                        @(theater.STATUS == "Pending" ? "-" : theater.UPDATE_DATE.ToString("dd-MMM-yyyy"))
                                    </td>
                                    <td class="sticky-column-right">
                                        @if (isActionRequests)
                                        {
                                            <a href="@Url.Action("Registration", "TRN_REGISTRATION", new { id = theater.T_ID, mode="approve" })"
                                               class="btn btn-secondary btn-sm" title="View">
                                                <i class="fa fa-eye"></i>
                                            </a>
                                        }

                                        else
                                        {

                                            <a href="@Url.Action("Registration", "TRN_REGISTRATION", new { id = theater.T_ID,mode="edit" })"
                                               class="btn btn-primary btn-sm mb-2 w-100">Edit</a>
                                            <button type="button" onclick="confirmSoftDelete('@theater.T_ID')"
                                                    class="btn btn-danger btn-sm">
                                                Delete
                                            </button>

                                        }
                                    </td>
                                </tr>
                                count++;
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="13" class="text-center">No theater data available.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>



    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this theater with <strong id="theaterIdText"></strong>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <a href="#" id="confirmDelete" class="btn btn-danger">Yes, Delete</a>
                </div>
            </div>
        </div>
    </div>
    @*SCRIPTS*@
    <script>
        function confirmSoftDelete(tid) {
            console.log("Delete button clicked. Theater ID:", tid); // Debugging step

            // Ensure the modal element exists
            var deleteModal = document.getElementById("deleteModal");
            if (!deleteModal) {
                console.error("Modal element not found!");
                return;
            }

            // Set the theater ID in the modal text
            document.getElementById("theaterIdText").textContent = tid;

            // Set up the delete button action inside the modal
            document.getElementById("confirmDelete").onclick = function () {
                var form = document.createElement("form");
                form.method = "POST";
                form.action = "/Home/Theater_List";

                var input = document.createElement("input");
                input.type = "hidden";
                input.name = "deleteId";
                input.value = tid;

                form.appendChild(input);
                document.body.appendChild(form);
                form.submit();
            };

            // Show the Bootstrap modal
            var modalInstance = new bootstrap.Modal(deleteModal);
            modalInstance.show();
        }
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const filterToggle = document.getElementById('filterToggle');
            const advancedFilters = document.getElementById('advancedFilters');

            filterToggle.addEventListener('click', function () {
                advancedFilters.style.display = advancedFilters.style.display === 'none' ? 'block' : 'none';
            });
        });

        function resetForm() {
            // Clear input fields
            document.getElementById('filterForm').reset();

            // Hide all rows in the table body except the header
            let tableBody = document.querySelector("tbody");
            let rows = tableBody.querySelectorAll("tr");

            rows.forEach(row => {
                row.style.display = "none"; // Hide all rows
            });
        }


    </script>
    <script>
        function showDeleteModal(tid, deleteUrl) {
            document.getElementById('theaterIdText').textContent = ("Theater ID: ${ tid }"); // Display T_ID in modal
            document.getElementById('confirmDelete').href = deleteUrl; // Set delete URL dynamically
            var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }
    </script>
    <script>
        function showDeleteModal(tid, deleteUrl) {
            document.getElementById('theaterIdText').textContent = "Theater ID:${ tid }";
            document.getElementById('confirmDelete').href = deleteUrl;
            var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }
    </script>



    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>


</body>
</html>


