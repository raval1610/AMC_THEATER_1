@{
    ViewBag.Title = "Edit_Registration";
    ViewBag.ShowBasicNavbar = true; // Show only the basic navbar
    ViewBag.ShowNavbar = true;
    ViewBag.ShowSideBar = true;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Theater Registration</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <script src="~/Scripts/script.js"></script>

</head>

<body class="bg-light mt-5 ms-5">

    <div class="ms-5 mt-5">
        <div class="container col-md-12 ms-5 mt-5">
            <div class="card ms-5 mt-5 p-4 shadow-sm rounded">
                <h2 class="text-center mt-3 mb-4 ">Edit / Delete Registration</h2>

                <!-- Theater ID Section -->
                <div class="mb-4" id="theaterIdSection">
                    <label for="theater_id" class="form-label fw-bold">Theater ID</label>
                    <div class="input-group">
                        <input type="text" id="theater_id" name="theater_id" class="form-control" placeholder="Enter Theater ID" required>
                        <button type="button" class="btn btn-primary" id="searchButton">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                    <div class="text-end mt-2">
                        <a href="@Url.Action("SearchID","Home")" class="btn btn-primary w-25">Forgot Your ID?</a>
                    </div>
                </div>

                <!-- Buttons: Edit and Delete -->
                <div class="d-flex justify-content-start mt-1 mb-2">
                    <button type="button" class="btn btn-primary me-2" id="editButton" onclick="toggleEditMode()">Edit / Delete</button>
                    @*<button type="button" class="btn btn-danger" id="deleteButton" onclick="toggleDelMode()">Delete</button>*@
                </div>

                <!-- Hidden Registration Form Section -->
                <div id="registrationForm" style="display: none;">
                    <form id="TheaterForm">
                        @*<h4 class="mb-3">Edit Registration Form</h4>*@
                        <!-- Dynamic Form Heading -->
                        <h4 id="formHeading" class="mb-3"></h4>

                        <!-- First row with three fields -->
                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <label for="TheaterName" class="form-label fw-bold">Theatre Name <span class="text-danger">*</span></label>
                                <input type="text" id="TheaterName" name="TheaterName" class="form-control" placeholder="Enter theater name" required>
                            </div>

                            <div class="col-md-4 mb-3">
                                <label for="OwnerName" class="form-label fw-bold">Owner's Name <span class="text-danger">*</span></label>
                                <input type="text" id="OwnerName" name="OwnerName" class="form-control" placeholder="Enter owner's name" required>
                            </div>

                            <div class="col-md-4 mb-3">
                                <label for="RepresentativeContact" class="form-label fw-bold">Representative's Contact No. <span class="text-danger">*</span></label>
                                <input type="text" id="RepresentativeContact" name="RepresentativeContact" class="form-control" placeholder="Enter contact number" required>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <label for="TheaterAddress" class="form-label fw-bold">Theatre Address <span class="text-danger">*</span></label>
                                <textarea id="TheaterAddress" name="TheaterAddress" class="form-control" rows="3" placeholder="Enter theater address" required></textarea>
                            </div>

                            <div class="col-md-4 mb-3">
                                <label for="EmailID" class="form-label fw-bold">Email ID <span class="text-danger">*</span></label>
                                <input type="email" id="EmailID" name="EmailID" class="form-control" placeholder="Enter email ID" required>
                            </div>

                            <div class="col-md-4 mb-3">
                                <label for="theaterCommencementData" class="form-label fw-bold">Theatre Commencement Date <span class="text-danger">*</span></label>
                                <input type="date" id="theaterCommencementData" name="theaterCommencementData" class="form-control" placeholder="dd-mm-yyyy" required>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <label for="City" class="form-label fw-bold">City <span class="text-danger">*</span></label>
                                <input type="text" id="City" name="City" class="form-control" placeholder="Enter city" required>
                            </div>

                            <div class="col-md-4 mb-3">
                                <label for="Zone" class="form-label fw-bold">Zone <span class="text-danger">*</span></label>
                                <select id="Zone" name="Zone" class="form-control" required>
                                    <option value="" disabled selected>-- Select Zone --</option>
                                    <option value="Zone1">Zone 1</option>
                                    <option value="Zone2">Zone 2</option>
                                    <option value="Zone3">Zone 3</option>
                                    <option value="Zone4">Zone 4</option>
                                </select>
                            </div>

                            <div class="col-md-4 mb-3">
                                <label for="WardZone" class="form-label fw-bold">Ward <span class="text-danger">*</span></label>
                                <select id="WardZone" name="WardZone" class="form-control" required>
                                    <option value="" disabled selected>-- Select Ward Zone --</option>
                                    <option value="Ward1">Ward 1</option>
                                    <option value="Ward2">Ward 2</option>
                                    <option value="Ward3">Ward 3</option>
                                    <option value="Ward4">Ward 4</option>
                                </select>
                            </div>
                        </div>


                        <!-- Third row with three fields -->
                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <label for="amcPropertyTactTenementNo" class="form-label fw-bold">AMC Property Tax Tenement No<span class="text-danger">*</span></label>
                                <input type="text" id="amcPropertyTactTenementNo" name="amcPropertyTactTenementNo" class="form-control" placeholder="Tenement No" required>
                            </div>

                            <div class="col-md-4 mb-3">
                                <label for="amcProfessionalTaxPECNo" class="form-label fw-bold">AMC Professional Tax PEC No<span class="text-danger">*</span></label>
                                <input type="text" id="amcProfessionalTaxPECNo" name="amcProfessionalTaxPECNo" class="form-control" maxlength="18" placeholder="PEC No" required>
                            </div>

                            <div class="col-md-4 mb-3">
                                <label for="prcNo" class="form-label fw-bold">PRC No<span class="text-danger">*</span></label>
                                <input type="text" id="prcNo" name="prcNo" class="form-control" maxlength="18" placeholder="PRC No" required>
                            </div>
                        </div>

                        <!-- Theater Tax Paid Offline Section -->
                        <div class="col-12">
                            <label for="theaterTaxPaidOffline" class="form-label fw-bold">Has Theatre Tax been paid offline?<span class="text-danger">*</span></label>
                            <div class="form-check d-inline-block me-3">
                                <input type="radio" class="form-check-input" id="yes" name="theaterTaxPaidOffline" value="Yes" required onclick="toggleFields(true)">
                                <label class="form-check-label" for="yes">Yes</label>
                            </div>
                            <div class="form-check d-inline-block">
                                <input type="radio" class="form-check-input" id="no" name="theaterTaxPaidOffline" value="No" required onclick="toggleFields(false)">
                                <label class="form-check-label" for="no">No</label>
                            </div>
                        </div>

                        <!-- Payment Fields (Show only if Offline Tax is Yes) -->
                        <div id="paymentFields" class="col-md-12" style="display:none;">
                            <div class="d-flex">
                                <div class="col-md-4 me-3">
                                    <label for="latestPaymentAmount" class="form-label fw-bold">Latest Amount of Payment:</label>
                                    <input type="number" class="form-control" id="latestPaymentAmount" name="latestPaymentAmount" placeholder="Latest Amount of Payment" step="0.01" required>
                                </div>

                                <div class="col-md-4 me-3">
                                    <label for="paymentDate" class="form-label fw-bold">Payment Date:</label>
                                    <input type="date" class="form-control" id="paymentDate" name="paymentDate" required>
                                </div>

                                <div class="col-md-4">
                                    <label for="uptoDate" class="form-label fw-bold">Upto Month:</label>
                                    <input type="date" class="form-control" id="uptoDate" name="uptoDate" required>
                                </div>
                            </div>
                        </div>

                        <!-- Number of Screens Section -->
                        <div class="col-12 d-flex align-items-center mb-3">
                            <label for="numberOfScreens" class="form-label fw-bold me-3">Number of Screens (1-10):</label>
                            <input type="number" class="form-control me-3" id="numberOfScreens" name="numberOfScreens" min="1" max="10" required>
                            <button type="button" class="btn btn-primary mt-2" onclick="updateScreenCapacity()">Add</button>
                            <button type="button" class="btn btn-secondary mt-2 ms-2" onclick="clearFields()">Clear</button>
                        </div>

                        <!-- Grid Table for Screen Capacity -->
                        <table id="screenCapacityTable" class="table table-bordered mt-3">
                            <thead>
                                <tr>
                                    <th>Screen No</th>
                                    <th>Seat Capacity</th>
                                    <th>Screen Type</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Screen capacities will be inserted here -->
                            </tbody>
                        </table>

                        <p id="errorMessage" class="col-12 text-danger" style="display:none;">Please enter a value between 1 and 10.</p>





                        <div id="capacityFields" class="col-12 mt-3">
                            <!-- Screen capacity fields will appear here -->
                        </div>

                        <p id="errorMessage" class="col-12 text-danger" style="display:none;">Please enter a value between 1 and 10.</p>

                        <!-- Upload Documents Section -->
                        <label class="form-label fw-bold mb-3" style="font-size: 1.25rem;">Upload Required Documents:</label>
                        <table class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th class="fw-bold">Document Name</th>
                                    <th class="fw-bold">Document Type</th>
                                    <th class="fw-bold">Size (MB)</th>
                                    <th class="fw-bold">Upload</th>
                                    <th class="fw-bold">View</th>
                                </tr>
                            </thead>
                            <tbody id="documentTable">
                                <tr>
                                    <td class="fw-bold">Cinema License from District Magistrate</td>
                                    <td>PDF, JPG, PNG, DOCX</td>
                                    <td><span id="cinemaLicenseSize">0 MB</span></td>
                                    <td><input type="file" class="form-control" id="cinemaLicense" name="cinemaLicense" accept=".pdf,.jpg,.png,.docx" onchange="updateFileSize('cinemaLicense', 'cinemaLicenseSize')" required></td>
                                    <td><button type="button" class="btn btn-link" onclick="viewDocument('cinemaLicense')">View</button></td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">B.U Permission of AMC</td>
                                    <td>PDF, JPG, PNG, DOCX</td>
                                    <td><span id="amcPermissionSize">0 MB</span></td>
                                    <td><input type="file" class="form-control" id="amcPermission" name="amcPermission" accept=".pdf,.jpg,.png,.docx" onchange="updateFileSize('amcPermission', 'amcPermissionSize')" required></td>
                                    <td><button type="button" class="btn btn-link" onclick="viewDocument('amcPermission')">View</button></td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Fire NOC of AMC</td>
                                    <td>PDF, JPG, PNG, DOCX</td>
                                    <td><span id="fireNocSize">0 MB</span></td>
                                    <td><input type="file" class="form-control" id="fireNoc" name="fireNoc" accept=".pdf,.jpg,.png,.docx" onchange="updateFileSize('fireNoc', 'fireNocSize')" required></td>
                                    <td><button type="button" class="btn btn-link" onclick="viewDocument('fireNoc')">View</button></td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">AMC Property Tax Bill</td>
                                    <td>PDF, JPG, PNG, DOCX</td>
                                    <td><span id="propertyTaxSize">0 MB</span></td>
                                    <td><input type="file" class="form-control" id="propertyTax" name="propertyTax" accept=".pdf,.jpg,.png,.docx" onchange="updateFileSize('propertyTax', 'propertyTaxSize')" required></td>
                                    <td><button type="button" class="btn btn-link" onclick="viewDocument('propertyTax')">View</button></td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">AMC Profession Tax Registration Certificate</td>
                                    <td>PDF, JPG, PNG, DOCX</td>
                                    <td><span id="professionTaxSize">0 MB</span></td>
                                    <td><input type="file" class="form-control" id="professionTax" name="professionTax" accept=".pdf,.jpg,.png,.docx" onchange="updateFileSize('professionTax', 'professionTaxSize')" required></td>
                                    <td><button type="button" class="btn btn-link" onclick="viewDocument('professionTax')">View</button></td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">GST Certificate</td>
                                    <td>PDF, JPG, PNG, DOCX</td>
                                    <td><span id="gstCertificateSize">0 MB</span></td>
                                    <td><input type="file" class="form-control" id="gstCertificate" name="gstCertificate" accept=".pdf,.jpg,.png,.docx" onchange="updateFileSize('gstCertificate', 'gstCertificateSize')" required></td>
                                    <td><button type="button" class="btn btn-link" onclick="viewDocument('gstCertificate')">View</button></td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">ID Proof of Owner (Aadhar card/voter's card/Driving License/PAN card/Passport)</td>
                                    <td>PDF, JPG, PNG, DOCX</td>
                                    <td><span id="ownerIdProofSize">0 MB</span></td>
                                    <td><input type="file" class="form-control" id="ownerIdProof" name="ownerIdProof" accept=".pdf,.jpg,.png,.docx" onchange="updateFileSize('ownerIdProof', 'ownerIdProofSize')" required></td>
                                    <td><button type="button" class="btn btn-link" onclick="viewDocument('ownerIdProof')">View</button></td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Latest Payment Receipt (if applicable)</td>
                                    <td>PDF, JPG, PNG, DOCX</td>
                                    <td><span id="paymentReceiptSize">0 MB</span></td>
                                    <td><input type="file" class="form-control" id="paymentReceipt" name="paymentReceipt" accept=".pdf,.jpg,.png,.docx" onchange="updateFileSize('paymentReceipt', 'paymentReceiptSize')" required></td>
                                    <td><button type="button" class="btn btn-link" onclick="viewDocument('paymentReceipt')">View</button></td>
                                </tr>
                            </tbody>
                        </table>
                        <div class="col-12 text-center">
                            <button type="button" class="btn btn-primary btn-lg w-25" id="submitButton" onclick="window.location.href='@Url.Action("Theater_Tax", "Home")'">Edit</button>
                            <button type="button" class="btn btn-danger btn-lg w-25" id="submitButton" onclick="window.location.href='@Url.Action("Theater_Tax", "Home")'">Delete</button>

                        </div>



                </div>

                <!--<div class="col-12 mb-4 d-flex align-items-center">-->
                <!-- Chevron Arrow -->
                <!--<i class="bi bi-chevron-right"
                onclick="toggleNotes()"
                style="cursor: pointer; font-size: 2rem; margin-right: 10px;"
                data-bs-toggle="tooltip"
                title="Show Notes"></i>-->
                <!-- Heading -->
                <!--<h4
                        " style="cursor: pointer; margin: 0; font-weight: bold; color: #343a40;">
                        Show Notes
                    </h4>
                </div>-->
                <!-- Submit Button -->
                </form>
            </div>
        </div>
    </div>
    <script>
            // Function to toggle notes visibility
            function toggleNotes() {
                var notesSection = document.getElementById("notesSection");
                if (notesSection.style.display === "none") {
                    notesSection.style.display = "block";
                } else {
                    notesSection.style.display = "none";
                }
            }
    </script>



    <script>
            function updateFileSize(inputId, sizeId) {
                const fileInput = document.getElementById(inputId);
                const sizeElement = document.getElementById(sizeId);
                if (fileInput.files.length > 0) {
                    const file = fileInput.files[0];
                    const fileSize = (file.size / 1024 / 1024).toFixed(2); // Size in MB
                    sizeElement.innerText = fileSize + ' MB';
                } else {
                    sizeElement.innerText = '0 MB';
                }
            }

            function viewDocument(inputId) {
                const fileInput = document.getElementById(inputId);
                if (fileInput.files.length > 0) {
                    const file = fileInput.files[0];
                    const fileURL = URL.createObjectURL(file);
                    window.open(fileURL, '_blank');
                } else {
                    alert('No document selected');
                }
            }
    </script>



    <script>
            function updateFileSize(inputId, sizeId) {
                const fileInput = document.getElementById(inputId);
                const sizeElement = document.getElementById(sizeId);

                if (fileInput.files.length > 0) {
                    const file = fileInput.files[0];
                    const fileSize = file.size / 1024; // Size in KB

                    // Check if the file size is within the limit (500 KB)
                    if (fileSize > 500) {
                        alert("File size exceeds 500 KB. Please select a smaller file.");
                        fileInput.value = '';  // Clear the file input
                        sizeElement.innerText = '0 MB';
                    } else {
                        const fileSizeMB = (fileSize / 1024).toFixed(2); // Size in MB
                        sizeElement.innerText = fileSizeMB + ' MB';
                    }
                } else {
                    sizeElement.innerText = '0 MB';
                }
            }

            function viewDocument(inputId) {
                const fileInput = document.getElementById(inputId);
                if (fileInput.files.length > 0) {
                    const file = fileInput.files[0];
                    const fileURL = URL.createObjectURL(file);
                    window.open(fileURL, '_blank');
                } else {
                    alert('No document selected');
                }
            }
    </script>


    @*<div id="step-2" class="col-12 text-center">
            <button type="button" class="btn btn-success btn-lg w-50" onclick="location.href='@Url.Action("Theater_Tax","Theater_Tax", "Home")'">Submit</button>
        </div>

        <div class="text-center mt-4">
            <button type="button" class="btn btn-primary" id="nextButton">Submit</button>
        </div>*@

    <script>
            // Add an event listener to the button
            document.querySelector('#nextButton').addEventListener('click', (event) => {
                event.preventDefault(); // Prevent default behavior

                // Navigate to the controller action
                window.location.href = '/Home/Theater_Tax'; // Correct URL for the action
            });
    </script>

    <script>
            function toggleEditMode() {
                const registrationForm = document.getElementById('registrationForm');
                const deleteButton = document.getElementById('deleteButton');
                const editButton = document.getElementById('editButton');
                const formHeading = document.getElementById('formHeading');
                const submitButton = document.getElementById('submitButton'); // Reference to the submit button

                if (registrationForm.style.display === 'none' || registrationForm.style.display === '') {
                    // Show the registration form
                    registrationForm.style.display = 'block';
                    editButton.innerText = 'Cancel'; // Change button text
                    deleteButton.disabled = true; // Disable Edit button
                    formHeading.innerText = 'Edit Form'; // Update heading to "Delete Form"
                    submitButton.innerText = 'Update'; // Change submit button label to "Delete"
                    submitButton.style.backgroundColor = '#0d6efd'; // Set background color to skyblue
                    submitButton.style.borderColor = '#0d6efd   '; // Set border color to skyblue


                } else {
                    // Hide the registration form
                    registrationForm.style.display = 'none';
                    editButton.innerText = 'Edit / Delete'; // Reset button text
                    deleteButton.disabled = false; // Enable Edit button
                    formHeading.innerText = ''; // Clear heading
                    submitButton.innerText = 'Submit'; // Reset submit button label
                }


            }

            function toggleDelMode() {
                const registrationForm = document.getElementById('registrationForm');
                const deleteButton = document.getElementById('deleteButton');
                const editButton = document.getElementById('editButton');
                const formHeading = document.getElementById('formHeading'); // Reference to the <h4> element
                const submitButton = document.getElementById('submitButton'); // Reference to the submit button


                if (registrationForm.style.display === 'none' || registrationForm.style.display === '') {
                    // Show the registration form
                    registrationForm.style.display = 'block';
                    deleteButton.innerText = 'Cancel'; // Change button text
                    editButton.disabled = true; // Disable Edit button
                    formHeading.innerText = 'Delete Form'; // Update heading to "Delete Form"
                    submitButton.innerText = 'Delete'; // Change submit button label to "Delete"
                    submitButton.style.backgroundColor = 'red'; // Set background color to skyblue
                    submitButton.style.borderColor = 'red  '; // Set border color to skyblue


                } else {
                    // Hide the registration form
                    registrationForm.style.display = 'none';
                    deleteButton.innerText = 'Delete'; // Reset button text
                    editButton.disabled = false; // Enable Edit button
                    formHeading.innerText = ''; // Clear heading
                    submitButton.innerText = 'Submit'; // Reset submit button label
                }
            }


            function updateScreenCapacity() {
                const numberOfScreens = parseInt(document.getElementById('numberOfScreens').value, 10);
                const errorMessage = document.getElementById('errorMessage');
                const tableBody = document.getElementById('screenCapacityTable').getElementsByTagName('tbody')[0];
                const existingRows = tableBody.rows.length;

                if (numberOfScreens < 1 || numberOfScreens > 10) {
                    errorMessage.style.display = 'block';
                    return;
                } else {
                    errorMessage.style.display = 'none';
                }

                for (let i = existingRows + 1; i <= numberOfScreens; i++) {
                    const row = tableBody.insertRow();

                    const cell1 = row.insertCell(0);
                    cell1.innerText = `Screen ${i}`;

                    const cell2 = row.insertCell(1);
                    const capacityInput = document.createElement('input');
                    capacityInput.type = 'number';
                    capacityInput.classList.add('form-control');
                    capacityInput.min = '1';
                    capacityInput.max = '200';
                    capacityInput.addEventListener('input', () => setScreenTypeBasedOnCapacity(capacityInput, screenTypeInput));
                    cell2.appendChild(capacityInput);

                    const cell3 = row.insertCell(2);
                    const screenTypeInput = document.createElement('input');
                    screenTypeInput.type = 'text';
                    screenTypeInput.readOnly = true;
                    screenTypeInput.classList.add('form-control');
                    cell3.appendChild(screenTypeInput);

                    const cell4 = row.insertCell(3);
                    const editButton = document.createElement('button');
                    editButton.classList.add('btn', 'btn-warning', 'me-2');
                    editButton.innerText = 'Edit';
                    editButton.onclick = () => editRow(row);
                    const deleteButton = document.createElement('button');
                    deleteButton.classList.add('btn', 'btn-danger');
                    deleteButton.innerText = 'Delete';
                    deleteButton.onclick = () => deleteRow(row);
                    cell4.appendChild(editButton);
                    cell4.appendChild(deleteButton);
                }
            }

            function setScreenTypeBasedOnCapacity(capacityInput, screenTypeInput) {
                const capacity = capacityInput.value;
                if (capacity > 125) {
                    screenTypeInput.value = 'Audio Theatre';
                } else if (capacity > 0) {
                    screenTypeInput.value = 'Video Theatre';
                } else {
                    screenTypeInput.value = '';
                }
            }

            function editRow(row) {
                const capacityInput = row.cells[1].querySelector('input');
                const editButton = row.cells[3].querySelector('.btn-warning');
                if (editButton.innerText === 'Edit') {
                    capacityInput.disabled = false;
                    editButton.innerText = 'Save';
                } else {
                    capacityInput.disabled = true;
                    editButton.innerText = 'Edit';
                }
            }

            function deleteRow(row) {
                const tableBody = row.parentNode;
                tableBody.removeChild(row);
            }

            function clearFields() {
                document.getElementById('numberOfScreens').value = '';
                document.getElementById('screenCapacityTable').getElementsByTagName('tbody')[0].innerHTML = '';
                document.getElementById('errorMessage').style.display = 'none';
            }
    </script>
</body>
</html>
